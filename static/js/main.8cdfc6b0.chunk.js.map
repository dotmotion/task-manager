{"version":3,"sources":["context.js","components/tasks/TaskTimer.js","components/tasks/Task.js","components/tasks/Tasks.js","components/layout/TextInput.js","components/tasks/AddTask.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","tasks","filter","task","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","desc","time","hours","min","sec","status","dispatch","setState","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Consumer","TaskTimer","_this2","interval","setInterval","date","calculateCountdown","stop","endDate","diff","Date","parse","timeLeft","millisec","Math","floor","clearInterval","String","countDown","addLeadingZeros","defaultProps","Task","deleteItem","_this$props$task","className","style","cursor","color","float","onClick","bind","tasks_TaskTimer","Tasks","Fragment","map","tasks_Task","TextInput","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddTask","errors","onSubmit","_callee","e","_this$state","regenerator_default","wrap","_context","prev","next","preventDefault","abrupt","history","push","defineProperty","target","_this$state2","layout_TextInput","Header","href","branding","Link","to","About","NotFound","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8cdfc6b0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task.id !== action.payload)\r\n      };\r\n    case \"ADD_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: [action.payload, ...state.tasks]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    tasks: [\r\n      {\r\n        id: 1,\r\n        name: \"Test Task 1\",\r\n        desc: \"Refactor Component Code\",\r\n        time: {\r\n          hours: 1,\r\n          min: 30,\r\n          sec: 0\r\n        },\r\n        status: \"Work in Progress\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Test Task 2\",\r\n        desc: \"Ressolve Issue #558\",\r\n        time: {\r\n          hours: 1,\r\n          min: 0,\r\n          sec: 0\r\n        },\r\n        status: \"Completed\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Test Task 3\",\r\n        desc: \"Answer Emails\",\r\n        time: {\r\n          hours: 0,\r\n          min: 30,\r\n          sec: 0\r\n        },\r\n        status: \"Completed\"\r\n      }\r\n    ],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class TaskTimer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // update every second\r\n    this.interval = setInterval(() => {\r\n      const date = this.calculateCountdown(this.props.date);\r\n      date ? this.setState(date) : this.stop();\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop();\r\n  }\r\n\r\n  calculateCountdown(endDate) {\r\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n    // clear countdown\r\n    if (diff <= 0) return false;\r\n\r\n    const timeLeft = {\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      millisec: 0\r\n    };\r\n\r\n    // calculate time difference between now and end time\r\n\r\n    if (diff >= 3600) {\r\n      // 60 * 60\r\n      timeLeft.hours = Math.floor(diff / 3600);\r\n      diff -= timeLeft.hours * 3600;\r\n    }\r\n    if (diff >= 60) {\r\n      timeLeft.min = Math.floor(diff / 60);\r\n      diff -= timeLeft.min * 60;\r\n    }\r\n    timeLeft.sec = diff;\r\n\r\n    return timeLeft;\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  addLeadingZeros(value) {\r\n    value = String(value);\r\n    while (value.length < 2) {\r\n      value = \"0\" + value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  render() {\r\n    const countDown = this.state;\r\n\r\n    return (\r\n      <h6>\r\n        <span>{this.addLeadingZeros(countDown.hours)}:</span>\r\n        <span>{this.addLeadingZeros(countDown.min)}:</span>\r\n        <span>{this.addLeadingZeros(countDown.sec)}</span>\r\n      </h6>\r\n    );\r\n  }\r\n}\r\n\r\nTaskTimer.defaultProps = {\r\n  date: new Date()\r\n};\r\n\r\nexport default TaskTimer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport TaskTimer from \"./TaskTimer\";\r\n\r\nclass Task extends Component {\r\n  deleteItem = (id, dispatch) => {\r\n    dispatch({ type: \"DELETE_TASK\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, desc, time } = this.props.task;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body w-50 mb-3 bg-secondary shadow p-3 mb-5 mr-5 bg-white rounded\">\r\n              <h4>\r\n                {name}\r\n\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\r\n                  onClick={this.deleteItem.bind(this, id, dispatch)}\r\n                />\r\n              </h4>\r\n\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                  <TaskTimer props={time} />\r\n                </li>\r\n                <li className=\"list-group-item\">{desc}</li>\r\n              </ul>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nTask.propTypes = {\r\n  task: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Task;\r\n","import React, { Component } from \"react\";\r\nimport Task from \"./Task\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Tasks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { tasks } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">Task Manager</h1>\r\n              {tasks.map(task => (\r\n                <Task key={task.id} task={task} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInput = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInput from \"../layout/TextInput\";\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    name: \"\",\r\n    desc: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, desc, time } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (desc === \"\") {\r\n      this.setState({ errors: { desc: \"desc is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newTask = {\r\n      name,\r\n      desc,\r\n      time\r\n    };\r\n\r\n    dispatch({ type: \"ADD_TASK\", payload: newTask });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      desc: \"\",\r\n      time: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"task-manager/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, desc, time, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Task</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInput\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Task Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInput\r\n                    label=\"Descripion\"\r\n                    name=\"desc\"\r\n                    type=\"desc\"\r\n                    placeholder=\"Task Description\"\r\n                    value={desc}\r\n                    onChange={this.onChange}\r\n                    error={errors.desc}\r\n                  />\r\n                  <TextInput\r\n                    label=\"Time\"\r\n                    name=\"time\"\r\n                    type=\"text\"\r\n                    placeholder=\"Task Time\"\r\n                    value={time}\r\n                    onChange={this.onChange}\r\n                    error={errors.time}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Task\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0   \">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Task Manager</h1>\r\n      <p className=\"lead\">Simple Task Manager Application</p>\r\n      <p className=\"text-secondary\">v1.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Tasks from \"./components/tasks/Tasks\";\nimport AddTask from \"./components/tasks/AddTask\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./context\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Task Manager\" />\n            <div className=\"container d-flex flex-column justify-content-center align-items-center\">\n              <Switch>\n                <Route exact path=\"/\" component={Tasks} />\n                <Route exact path=\"/add\" component={AddTask} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}